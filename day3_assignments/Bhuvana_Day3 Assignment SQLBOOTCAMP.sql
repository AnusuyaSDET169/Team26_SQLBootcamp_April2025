CREATE TABLE IF NOT EXISTS "Day3_Assignment_SQLBOOTCAMP" (
    "Day3_Assignment_SQLBOOTCAMP" TEXT,
    "Column_2" TEXT,
    "Column_3" TEXT,
    "Column_4" TEXT,
    "Column_5" TEXT,
    "Column_6" TEXT,
    "Column_7" INT
);
INSERT INTO "Day3_Assignment_SQLBOOTCAMP" VALUES (NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('1)Update the categoryName From “Beverages” to "Drinks" in the categories table.',NULL,NULL,NULL,NULL,NULL,NULL),
	('UPDATE categories',NULL,NULL,NULL,NULL,NULL,NULL),
	('SET categoryname=''Drinks''',NULL,NULL,NULL,NULL,NULL,NULL),
	('where categoryname=''Beverages''',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('2)Insert into the shipper new record (give any values) Delete that new record from the shippers table.',NULL,NULL,NULL,NULL,NULL,NULL),
	('INSERT into shippers(shipperid','companyname)VALUES(4','''Amazon'')',NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('DELETE from shippers where shipperid=4',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('3)Update categoryID=1 to categoryID=1001. Make sure related products update their categoryID too. Display the both category and products table to show the cascade.',NULL,NULL,NULL,NULL,NULL,NULL),
	('ALTER table products',NULL,NULL,NULL,NULL,NULL,NULL),
	('DROP CONSTRAINT IF EXISTS products_categoryid_fkey',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('ALTER table products',NULL,NULL,NULL,NULL,NULL,NULL),
	('ADD FOREIGN KEY (categoryID)',NULL,NULL,NULL,NULL,NULL,NULL),
	('REFERENCES categories(categoryID)',NULL,NULL,NULL,NULL,NULL,NULL),
	('ON UPDATE CASCADE',NULL,NULL,NULL,NULL,NULL,NULL),
	('ON DELETE CASCADE;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('UPDATE categories',NULL,NULL,NULL,NULL,NULL,NULL),
	('SET categoryID = 1001',NULL,NULL,NULL,NULL,NULL,NULL),
	('WHERE categoryID = 1;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('SELECT * FROM products WHERE categoryID = 1001;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('SELECT * FROM categories;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(' Delete the categoryID= “3”  from categories. Verify that the corresponding records are deleted automatically from products.',NULL,NULL,NULL,NULL,NULL,NULL),
	('ALTER table order_details',NULL,NULL,NULL,NULL,NULL,NULL),
	('DROP CONSTRAINT IF Exists order_details_productid_fkey',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('ALTER table order_details',NULL,NULL,NULL,NULL,NULL,NULL),
	('ADD CONSTRAINT order_details_productid_fkey FOREIGN KEY (productID)',NULL,NULL,NULL,NULL,NULL,NULL),
	('REFERENCES products(productID)',NULL,NULL,NULL,NULL,NULL,NULL),
	('ON UPDATE CASCADE',NULL,NULL,NULL,NULL,NULL,NULL),
	('ON DELETE CASCADE;',NULL,NULL,NULL,NULL,NULL,NULL),
	('DELETE from categories WHERE categoryID =3;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('-- Verify cascade delete',NULL,NULL,NULL,NULL,NULL,NULL),
	('SELECT * FROM categories;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('SELECT * FROM products WHERE categoryID = 3;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('4)      Delete the customer = “VINET”  from customers. Corresponding customers in orders table should be set to null (HINT: Alter the foreign key on orders(customerID) to use ON DELETE SET NULL)',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('ALTER TABLE orders',NULL,NULL,NULL,NULL,NULL,NULL),
	('DROP CONSTRAINT orders_customerid_fkey;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('ALTER TABLE orders',NULL,NULL,NULL,NULL,NULL,NULL),
	('ADD CONSTRAINT fk_orders_customer',NULL,NULL,NULL,NULL,NULL,NULL),
	('FOREIGN KEY (customerID)',NULL,NULL,NULL,NULL,NULL,NULL),
	('REFERENCES customers(customerID)',NULL,NULL,NULL,NULL,NULL,NULL),
	('ON DELETE SET NULL;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('DELETE FROM customers',NULL,NULL,NULL,NULL,NULL,NULL),
	('WHERE customerID = ''VINET'';',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('5)Insert the following data to Products using UPSERT:',NULL,NULL,NULL,NULL,NULL,NULL),
	('product_id = 100',' product_name = Wheat bread',' quantityperunit=1','unitprice = 13',' discontinued = 0',' categoryID=3',NULL),
	('product_id = 101',' product_name = White bread',' quantityperunit=5 boxes','unitprice = 13',' discontinued = 0',' categoryID=3',NULL),
	('product_id = 100',' product_name = Wheat bread',' quantityperunit=10 boxes','unitprice = 13',' discontinued = 0',' categoryID=3',NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('(this should update the quantityperunit for product_id = 100)',NULL,NULL,NULL,NULL,NULL,NULL),
	('INSERT INTO Products (productid',' productname',' quantityperunit',' unitprice',' discontinued',' categoryID)',NULL),
	('VALUES (100',' ''Wheat bread''',' ''1''',' 13',' false',' 3)',NULL),
	('ON CONFLICT (productid) DO UPDATE',NULL,NULL,NULL,NULL,NULL,NULL),
	('SET quantityperunit = EXCLUDED.quantityperunit;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('INSERT INTO Products (productid',' productname',' quantityperunit',' unitprice',' discontinued',' categoryID)',NULL),
	('VALUES (101',' ''White bread''',' ''5 boxes''',' 13',' false',' 3)',NULL),
	('                 (100','''Wheat bread''','''10 boxes''','13','false','3)',NULL),
	('ON CONFLICT (productid) DO UPDATE',NULL,NULL,NULL,NULL,NULL,NULL),
	('SET quantityperunit = EXCLUDED.quantityperunit;',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('6)Write a MERGE query:',NULL,NULL,NULL,NULL,NULL,NULL),
	('Create temp table with name:  ‘updated_products’ and insert values ',NULL,NULL,NULL,NULL,NULL,NULL),
	(' ',NULL,NULL,NULL,NULL,NULL,NULL),
	('Update the price and discontinued status for from below table ‘updated_products’ only if there are matching products and updated_products .discontinued =0 ',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('If there are matching products and updated_products .discontinued =1 then delete ',NULL,NULL,NULL,NULL,NULL,NULL),
	(' ',NULL,NULL,NULL,NULL,NULL,NULL),
	(' Insert any new products from updated_products that don’t exist in products only if updated_products .discontinued =0.',NULL,NULL,NULL,NULL,NULL,NULL),
	('MERGE INTO products_new p',NULL,NULL,NULL,NULL,NULL,NULL),
	('USING (',NULL,NULL,NULL,NULL,NULL,NULL),
	('	VALUES(100','''Wheat bread''','''10''','20','true','3)',NULL),
	('			(101','''White bread''','''5 boxes''','19.99','false','3)',NULL),
	('			(102','''Midnight Mango Fizz''','''24-12 oz bottles''','19','false','1)',NULL),
	('			(103','''Savory Fire Sauce''','''12-550ml bottles''','10','false','2)',NULL),
	(') AS incoming(productid','productname','quantityperunit','unitprice','discontinued','categoryid)',NULL),
	('ON p.productid=incoming.productid',NULL,NULL,NULL,NULL,NULL,NULL),
	('when matched and incoming.discontinued= true then',NULL,NULL,NULL,NULL,NULL,NULL),
	('	DELETE ',NULL,NULL,NULL,NULL,NULL,NULL),
	('when matched and incoming.discontinued=false then',NULL,NULL,NULL,NULL,NULL,NULL),
	('    UPDATE SET ',NULL,NULL,NULL,NULL,NULL,NULL),
	('	productname=incoming.productname',NULL,NULL,NULL,NULL,NULL,NULL),
	('	unitprice=incoming.unitprice',NULL,NULL,NULL,NULL,NULL,NULL),
	('when not matched and incoming.discontinued=false then',NULL,NULL,NULL,NULL,NULL,NULL),
	('	INSERT(productid','productname','quantityperunit','unitprice','discontinued','categoryid)',NULL),
	('	VALUES(incoming.productid','incoming.productname','incoming.quantityperunit','incoming.unitprice','incoming.discontinued','incoming.categoryid)',NULL),
	('	',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('7)List all orders with employee full names. (Inner join)',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	('SELECT o.order_id','(first_name || '' '' || last_name) AS employeeName from orders o',NULL,NULL,NULL,NULL,NULL),
	('JOIN employees e on o.employee_id=o.employee_id',NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL),
	(NULL,NULL,NULL,NULL,NULL,NULL,NULL);
