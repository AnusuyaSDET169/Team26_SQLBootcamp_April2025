CREATE TABLE IF NOT EXISTS "Bhuvana_SQL_Assignment_9" (
    "Column_1" TEXT,
    "Column_2" TEXT,
    "Column_3" TEXT
);
INSERT INTO "Bhuvana_SQL_Assignment_9" VALUES ('CREATE TABLE product_price_audit (',NULL,NULL),
	('    audit_id SERIAL PRIMARY KEY',NULL,NULL),
	('    product_id INT',NULL,NULL),
	('    product_name VARCHAR(40)',NULL,NULL),
	('    old_price DECIMAL(10','2)',NULL),
	('    new_price DECIMAL(10','2)',NULL),
	('    change_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP',NULL,NULL),
	('    user_name VARCHAR(50) DEFAULT CURRENT_USER',NULL,NULL),
	(');',NULL,NULL),
	(NULL,NULL,NULL),
	('select * from product_price_audit;',NULL,NULL),
	(NULL,NULL,NULL),
	('select * from products;',NULL,NULL),
	(NULL,NULL,NULL),
	('CREATE function track_price_changes()',NULL,NULL),
	('RETURNS TRIGGER AS $$',NULL,NULL),
	('BEGIN',NULL,NULL),
	('    INSERT INTO product_price_audit (',NULL,NULL),
	('        product_id',NULL,NULL),
	('        product_name',NULL,NULL),
	('        old_price',NULL,NULL),
	('        new_price',NULL,NULL),
	('    )',NULL,NULL),
	('    VALUES (',NULL,NULL),
	('        OLD.product_id',NULL,NULL),
	('        OLD.product_name',NULL,NULL),
	('        OLD.unit_price',NULL,NULL),
	('        NEW.unit_price',NULL,NULL),
	('    );',NULL,NULL),
	('    RETURN NEW;',NULL,NULL),
	('END;',NULL,NULL),
	('$$ LANGUAGE plpgsql;',NULL,NULL),
	(NULL,NULL,NULL),
	(NULL,NULL,NULL),
	('CREATE TRIGGER trg_product_price_update',NULL,NULL),
	('AFTER UPDATE OF unit_price ON products',NULL,NULL),
	('FOR EACH ROW',NULL,NULL),
	('WHEN (OLD.unit_price IS DISTINCT FROM NEW.unit_price)',NULL,NULL),
	('EXECUTE FUNCTION track_price_changes();',NULL,NULL),
	(NULL,NULL,NULL),
	(NULL,NULL,NULL),
	('UPDATE products',NULL,NULL),
	('SET unit_price = unit_price * 1.1',NULL,NULL),
	('WHERE product_id = 1;',NULL,NULL),
	(NULL,NULL,NULL),
	(NULL,NULL,NULL),
	(NULL,NULL,NULL),
	('create table if not exists employee_tasks (',NULL,NULL),
	('    task_id SERIAL PRIMARY KEY',NULL,NULL),
	('    employee_id INT',NULL,NULL),
	('    task_name VARCHAR(50)',NULL,NULL),
	('    assigned_date DATE DEFAULT CURRENT_DATE',NULL,NULL),
	(');',NULL,NULL),
	(NULL,NULL,NULL),
	('CREATE PROCEDURE assign_task(',NULL,NULL),
	('    IN p_employee_id INT',NULL,NULL),
	('    IN p_task_name VARCHAR(50)',NULL,NULL),
	('    INOUT p_task_count INT DEFAULT 0',NULL,NULL),
	(')',NULL,NULL),
	('LANGUAGE plpgsql',NULL,NULL),
	('AS $$',NULL,NULL),
	('BEGIN',NULL,NULL),
	('    -- Insert new task',NULL,NULL),
	('    INSERT INTO employee_tasks (employee_id',' task_name)',NULL),
	('    VALUES (p_employee_id',' p_task_name);',NULL),
	(NULL,NULL,NULL),
	('    -- Count tasks',NULL,NULL),
	('    SELECT COUNT(*) INTO p_task_count',NULL,NULL),
	('    FROM employee_tasks',NULL,NULL),
	('    WHERE employee_id = p_employee_id;',NULL,NULL),
	(NULL,NULL,NULL),
	('    -- Show notice',NULL,NULL),
	('    RAISE NOTICE ''Task "%" assigned to employee %. Total tasks: %''',NULL,NULL),
	('        p_task_name',' p_employee_id',' p_task_count;'),
	('END;',NULL,NULL),
	('$$;',NULL,NULL),
	(NULL,NULL,NULL),
	('select * from employee_tasks WHERE employee_id = 1;',NULL,NULL),
	(NULL,NULL,NULL),
	('CALL assign_task(1',' ''Review Reports''',' 0);');
